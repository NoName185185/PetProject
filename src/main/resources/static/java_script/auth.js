function openLoginModal() {
  const modalHTML = `
    <div class="modal-overlay" id="loginModal">
      <div class="modal">
        <button class="close-btn" onclick="closeModal()">√ó</button>
        <h2>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>
        <input type="text" id="login-username" placeholder="–ê—Ç—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑">
        <div class="password-wrapper">
          <input type="password" id="password1" placeholder="“ö“±–ø–∏—è —Å”©–∑—ñ“£—ñ–∑–¥—ñ –∂–∞–∑—ã“£—ã–∑">
          <span class="toggle-password" onclick="togglePassword('password1', this)">üëÅÔ∏è</span>
        </div>
        <button class="submit-btn" onclick="handleLogin()">–ö—ñ—Ä—É</button>
        <a href="#" class="login-link" onclick="closeModal(); openRegistrationModal();">–ú–µ–Ω–¥–µ –µ—Å–µ–ø –∂–æ“õ</a>
      </div>
    </div>
  `;
  document.getElementById("modal-container").innerHTML = modalHTML;
  document.getElementById("loginModal").addEventListener("click", function (e) {
    if (e.target === this) closeModal();
  });
}

function openRegistrationModal() {
  const modalHTML = `
    <div class="modal-overlay" id="registrationModal">
      <div class="modal">
        <button class="close-btn" onclick="closeModal()">√ó</button>
        <h2>–¢—ñ—Ä–∫–µ–ª—É</h2>
        <input type="text" id="register-email" placeholder="Email –∂–∞–∑—ã“£—ã–∑">
        <input type="password" id="register-password" placeholder="“ö“±–ø–∏—è —Å”©–∑–¥—ñ –∂–∞–∑—ã“£—ã–∑">
        <button class="submit-btn" onclick="handleRegistration()">–¢—ñ—Ä–∫–µ–ª—É</button>
        <a href="#" class="login-link" onclick="closeModal(); openLoginModal();">–ú–µ–Ω–¥–µ —Ç—ñ—Ä–∫–µ–ª–≥—ñ –±–∞—Ä</a>
      </div>
    </div>
  `;
  document.getElementById("modal-container").innerHTML = modalHTML;
  document.getElementById("registrationModal").addEventListener("click", function (e) {
    if (e.target === this) closeModal();
  });
}

function closeModal() {
  document.getElementById("modal-container").innerHTML = "";
}

function togglePassword(inputId, iconElement) {
  const input = document.getElementById(inputId);
  if (input.type === "password") {
    input.type = "text";
    iconElement.textContent = "üôà";
  } else {
    input.type = "password";
    iconElement.textContent = "üëÅÔ∏è";
  }
}

function handleLogin() {
  const username = document.getElementById("login-username").value.trim();
  const password = document.getElementById("password1").value; // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ

  fetch("/api/login", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ username, password })
  })
  .then(response => {
    if (!response.ok) throw new Error("“ö–∞—Ç–µ –∂–∞—É–∞–ø");
    return response.text();
  })
  .then(userId => {
    window.location.href = `/${userId}/main_registered`;
  })
  .catch(error => {
    alert("–ö—ñ—Ä—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ —à—ã“õ—Ç—ã.");
    console.error(error);
  });
}

function handleRegistration() {
  const email = document.getElementById("register-email").value.trim();
  const password = document.getElementById("register-password").value;

  const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\.com$/;
  const hasUpper = /[A-Z]/.test(password);
  const hasLower = /[a-z]/.test(password);
  const forbiddenSymbols = /[!@#$]/;

  if (!emailRegex.test(email)) {
    alert("Email —Ç–µ–∫ @gmail.com —Ñ–æ—Ä–º–∞—Ç—ã–Ω–¥–∞ –±–æ–ª—É –∫–µ—Ä–µ–∫.");
    return;
  }

  if (password.length < 8) {
    alert("“ö“±–ø–∏—è —Å”©–∑ –∫–µ–º—ñ–Ω–¥–µ 8 —Å–∏–º–≤–æ–ª–¥–∞–Ω —Ç“±—Ä—É—ã –∫–µ—Ä–µ–∫.");
    return;
  }

  if (forbiddenSymbols.test(password)) {
    alert("“ö“±–ø–∏—è —Å”©–∑–¥–µ !@#$ —Ç–∞“£–±–∞–ª–∞—Ä—ã –±–æ–ª–º–∞—É—ã –∫–µ—Ä–µ–∫.");
    return;
  }

  if (!hasUpper || !hasLower) {
    alert("“ö“±–ø–∏—è —Å”©–∑–¥–µ –∫–µ–º—ñ–Ω–¥–µ –±—ñ—Ä –±–∞—Å –∂”ô–Ω–µ –±—ñ—Ä –∫—ñ—à—ñ ”ô—Ä—ñ–ø –±–æ–ª—É –∫–µ—Ä–µ–∫.");
    return;
  }

  fetch("/api/check-user", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ email })
  })
  .then(res => res.json())
  .then(data => {
    if (data.exists) {
      alert("–ë“±–ª email –∞—Ä“õ—ã–ª—ã —Ç—ñ—Ä–∫–µ–ª–≥–µ–Ω “õ–æ–ª–¥–∞–Ω—É—à—ã –±–∞—Ä.");
    } else {
      fetch("/api/register", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, password })
      })
      .then(response => {
        if (!response.ok) throw new Error("–¢—ñ—Ä–∫–µ–ª—É —Å”ô—Ç—Å—ñ–∑ –∞—è“õ—Ç–∞–ª–¥—ã.");
        alert("–°”ô—Ç—Ç—ñ —Ç—ñ—Ä–∫–µ–ª–¥—ñ“£—ñ–∑!");
        closeModal();
        openLoginModal();
      })
      .catch(error => {
        alert("–°–µ—Ä–≤–µ—Ä “õ–∞—Ç–µ–ª—ñ–≥—ñ.");
        console.error(error);
      });
    }
  })
  .catch(err => {
    alert("“ö–æ–ª–¥–∞–Ω—É—à—ã–Ω—ã —Ç–µ–∫—Å–µ—Ä—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ —à—ã“õ—Ç—ã.");
    console.error(err);
  });
}
